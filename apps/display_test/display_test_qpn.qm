<?xml version="1.0" encoding="UTF-8"?>
<model version="3.0.1">
 <framework name="qpn"/>
 <package name="AOs" stereotype="0x02">
  <class name="Display" superclass="qpn::QMActive">
   <statechart>
    <initial target="../1">
     <initial_glyph conn="5,5,5,0,28,4">
      <action box="0,-2,6,2"/>
     </initial_glyph>
    </initial>
    <state name="DEMO">
     <initial target="../1">
      <initial_glyph conn="15,13,5,0,10,2">
       <action box="0,-2,6,2"/>
      </initial_glyph>
     </initial>
     <state name="D_IDLE">
      <entry>BSP_ledOff();
QActive_arm((QActive *)me, IDLE_TOUT);</entry>
      <exit>QActive_disarm((QActive *)me);</exit>
      <tran trig="Q_TIMEOUT" target="../../2">
       <tran_glyph conn="13,23,3,1,52">
        <action box="0,-2,11,2"/>
       </tran_glyph>
      </tran>
      <tran trig="SWITCH" target="../../../2">
       <tran_glyph conn="13,20,3,3,-10,24,10">
        <action box="-7,-2,6,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="13,15,19,15">
       <entry box="1,2,5,2"/>
       <exit box="1,4,5,2"/>
      </state_glyph>
     </state>
     <state name="D_SCROLLING">
      <entry>BSP_ledOn();
QActive_arm((QActive *)me, SCROLLING_TOUT);</entry>
      <exit>QActive_disarm((QActive *)me);</exit>
      <tran trig="Q_TIMEOUT">
       <action>bool rsp = BSP_drawPicture();</action>
       <choice target="../..">
        <guard>!rsp</guard>
        <choice_glyph conn="49,26,4,2,4">
         <action box="1,1,5,2"/>
        </choice_glyph>
       </choice>
       <choice target="../../../1">
        <guard>else</guard>
        <choice_glyph conn="49,26,5,3,-36">
         <action box="-6,-2,6,2"/>
        </choice_glyph>
       </choice>
       <tran_glyph conn="65,26,1,-1,-16">
        <action box="-9,-2,11,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="43,15,22,15">
       <entry box="1,2,5,2"/>
       <exit box="1,4,5,2"/>
      </state_glyph>
     </state>
     <state_glyph node="11,9,58,23"/>
    </state>
    <state name="STOP">
     <tran trig="SWITCH" target="../../1">
      <tran_glyph conn="13,40,3,3,-7,-17,5">
       <action box="-10,0,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="13,34,24,14"/>
    </state>
    <state_diagram size="72,52"/>
   </statechart>
  </class>
  <attribute name="AO_Display" type="QMActive *const" visibility="0x00" properties="0x00"/>
  <operation name="Display_ctor" type="void" visibility="0x00" properties="0x00">
   <documentation>constructor</documentation>
   <code>QMActive_ctor(&amp;AO_Display.super, Q_STATE_CAST(&amp;Display_initial));</code>
  </operation>
  <directory name=".">
   <file name="display_test.h">
    <text>#ifndef __DISPLAY_TEST_H__
#define __DISPLAY_TEST_H__

// active objects ................................................*/
$declare(AOs::Display_ctor)

extern struct DisplayTag AO_Display;

enum DisplaySignals {
    CAP_RIGHT_SIG = Q_USER_SIG,
    SWITCH_SIG,
};

#endif /* __DISPLAY_TEST_H__ */</text>
   </file>
   <file name="display_test.c">
    <text>#include &quot;qpn_port.h&quot;
#include &quot;bsp_.h&quot;
#include &quot;display_test.h&quot;

/*Q_DEFINE_THIS_FILE*/

#define SCROLLING_TOUT 1
#define IDLE_TOUT 3*BSP_TICKS_PER_SEC

/* Pelican class declaration -----------------------------------------------*/
$declare(AOs::Display)

/* Global objects ----------------------------------------------------------*/
Display AO_Display;     /* the single instance of the Display active object */

/* Blink class definition --------------------------------------------------*/
$define(AOs::Display_ctor)
$define(AOs::Display)</text>
   </file>
   <file name="main.c">
    <text>#include &quot;qpn_port.h&quot;   /* QP-nano port */
#include &quot;bsp_.h&quot;        /* Board Support Package (BSP) */
#include &quot;display_test.h&quot;      /* application interface */
/*..........................................................................*/
static QEvt l_displayQueue[5];

/* QF_active[] array defines all active object control blocks --------------*/
QActiveCB const Q_ROM Q_ROM_VAR QF_active[] = {
    { (QActive *)0,           (QEvt *)0,      0                     },
    { (QActive *)&amp;AO_Display,   l_displayQueue, Q_DIM(l_displayQueue)     }
};

/* make sure that the QF_active[] array matches QF_MAX_ACTIVE in qpn_port.h */
Q_ASSERT_COMPILE(QF_MAX_ACTIVE == Q_DIM(QF_active) - 1);

/*..........................................................................*/
int main(void)
{
    Display_ctor();    /* instantiate the Display AO */
    BSP_init();      /* initialize the board */

    return QF_run(); /* transfer control to QF-nano */
}</text>
   </file>
  </directory>
 </package>
</model>
